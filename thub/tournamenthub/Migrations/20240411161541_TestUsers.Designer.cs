// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using tournamenthub.Data;

#nullable disable

namespace tournamenthub.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240411161541_TestUsers")]
    partial class TestUsers
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.2.24128.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("tournamenthub.Models.UserModel", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "sergej.ajlec@gmail.com",
                            LastName = "Ajlec",
                            Name = "Sergej",
                            Password = "test123"
                        },
                        new
                        {
                            UserId = 2,
                            Email = "dejan.ajlec@gmail.com",
                            LastName = "Ajlec",
                            Name = "Dejan",
                            Password = "test123"
                        },
                        new
                        {
                            UserId = 3,
                            Email = "samo.ajlec@gmail.com",
                            LastName = "Ajlec",
                            Name = "Samo",
                            Password = "test123"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
